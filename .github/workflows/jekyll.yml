
name: sfops - Update Dashboard Data

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Generate Org Files
        run: node ./_scripts/create-org-files.js
      
      - name: Generate Release Definitions
        run: node ./_scripts/create-release-defns.js

      - name: Generate Release Logs
        run: ./_scripts/create-release-logs.sh
          

      - name: Generate Package View
        run: ./_scripts/create-package-view.sh

      - name: Migrate package visualisaton
        run: ./_scripts/copy-package-visualisation.sh


      - name: Combine Issue Status
        run: node _scripts/issue-combiner.js  

      - name: Combine Release Logs
        run: |
           node _scripts/create-latest-release-maps.js
           node _scripts/process-release-logs.js
           node _scripts/create-cross-domain-workitems.js
                    
      - name: Copy Changelog
        run: |
           cp -f CHANGELOG.md  sfops/CHANGELOG.md
                    

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
